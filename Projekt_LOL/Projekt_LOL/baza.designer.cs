#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Projekt_LOL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="baza")]
	public partial class BazaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGracze(Gracze instance);
    partial void UpdateGracze(Gracze instance);
    partial void DeleteGracze(Gracze instance);
    partial void InsertIkonyCzarow(IkonyCzarow instance);
    partial void UpdateIkonyCzarow(IkonyCzarow instance);
    partial void DeleteIkonyCzarow(IkonyCzarow instance);
    partial void InsertIkonyGraczy(IkonyGraczy instance);
    partial void UpdateIkonyGraczy(IkonyGraczy instance);
    partial void DeleteIkonyGraczy(IkonyGraczy instance);
    partial void InsertIkonyPrzedmiotow(IkonyPrzedmiotow instance);
    partial void UpdateIkonyPrzedmiotow(IkonyPrzedmiotow instance);
    partial void DeleteIkonyPrzedmiotow(IkonyPrzedmiotow instance);
    partial void InsertPostacie(Postacie instance);
    partial void UpdatePostacie(Postacie instance);
    partial void DeletePostacie(Postacie instance);
    partial void InsertRegiony(Regiony instance);
    partial void UpdateRegiony(Regiony instance);
    partial void DeleteRegiony(Regiony instance);
    partial void InsertGry(Gry instance);
    partial void UpdateGry(Gry instance);
    partial void DeleteGry(Gry instance);
    #endregion
		
		public BazaDataContext() : 
				base(global::Projekt_LOL.Properties.Settings.Default.bazaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BazaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BazaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BazaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BazaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Gracze> Graczes
		{
			get
			{
				return this.GetTable<Gracze>();
			}
		}
		
		public System.Data.Linq.Table<IkonyCzarow> IkonyCzarows
		{
			get
			{
				return this.GetTable<IkonyCzarow>();
			}
		}
		
		public System.Data.Linq.Table<IkonyGraczy> IkonyGraczies
		{
			get
			{
				return this.GetTable<IkonyGraczy>();
			}
		}
		
		public System.Data.Linq.Table<IkonyPrzedmiotow> IkonyPrzedmiotows
		{
			get
			{
				return this.GetTable<IkonyPrzedmiotow>();
			}
		}
		
		public System.Data.Linq.Table<Postacie> Postacies
		{
			get
			{
				return this.GetTable<Postacie>();
			}
		}
		
		public System.Data.Linq.Table<Regiony> Regionies
		{
			get
			{
				return this.GetTable<Regiony>();
			}
		}
		
		public System.Data.Linq.Table<Gry> Gries
		{
			get
			{
				return this.GetTable<Gry>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gracze")]
	public partial class Gracze : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _name;
		
		private int _profileIconId;
		
		private long _revisionDate;
		
		private long _summonerLevel;
		
		private int _idRegionu;
		
		private EntitySet<Gry> _Gries;
		
		private EntityRef<IkonyGraczy> _IkonyGraczy;
		
		private EntityRef<Regiony> _Regiony;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnprofileIconIdChanging(int value);
    partial void OnprofileIconIdChanged();
    partial void OnrevisionDateChanging(long value);
    partial void OnrevisionDateChanged();
    partial void OnsummonerLevelChanging(long value);
    partial void OnsummonerLevelChanged();
    partial void OnidRegionuChanging(int value);
    partial void OnidRegionuChanged();
    #endregion
		
		public Gracze()
		{
			this._Gries = new EntitySet<Gry>(new Action<Gry>(this.attach_Gries), new Action<Gry>(this.detach_Gries));
			this._IkonyGraczy = default(EntityRef<IkonyGraczy>);
			this._Regiony = default(EntityRef<Regiony>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profileIconId", DbType="Int NOT NULL")]
		public int profileIconId
		{
			get
			{
				return this._profileIconId;
			}
			set
			{
				if ((this._profileIconId != value))
				{
					if (this._IkonyGraczy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprofileIconIdChanging(value);
					this.SendPropertyChanging();
					this._profileIconId = value;
					this.SendPropertyChanged("profileIconId");
					this.OnprofileIconIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_revisionDate", DbType="BigInt NOT NULL")]
		public long revisionDate
		{
			get
			{
				return this._revisionDate;
			}
			set
			{
				if ((this._revisionDate != value))
				{
					this.OnrevisionDateChanging(value);
					this.SendPropertyChanging();
					this._revisionDate = value;
					this.SendPropertyChanged("revisionDate");
					this.OnrevisionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_summonerLevel", DbType="BigInt NOT NULL")]
		public long summonerLevel
		{
			get
			{
				return this._summonerLevel;
			}
			set
			{
				if ((this._summonerLevel != value))
				{
					this.OnsummonerLevelChanging(value);
					this.SendPropertyChanging();
					this._summonerLevel = value;
					this.SendPropertyChanged("summonerLevel");
					this.OnsummonerLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRegionu", DbType="Int NOT NULL")]
		public int idRegionu
		{
			get
			{
				return this._idRegionu;
			}
			set
			{
				if ((this._idRegionu != value))
				{
					if (this._Regiony.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRegionuChanging(value);
					this.SendPropertyChanging();
					this._idRegionu = value;
					this.SendPropertyChanged("idRegionu");
					this.OnidRegionuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gracze_Gry", Storage="_Gries", ThisKey="Id", OtherKey="summonerId")]
		public EntitySet<Gry> Gries
		{
			get
			{
				return this._Gries;
			}
			set
			{
				this._Gries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyGraczy_Gracze", Storage="_IkonyGraczy", ThisKey="profileIconId", OtherKey="profileIconId", IsForeignKey=true)]
		public IkonyGraczy IkonyGraczy
		{
			get
			{
				return this._IkonyGraczy.Entity;
			}
			set
			{
				IkonyGraczy previousValue = this._IkonyGraczy.Entity;
				if (((previousValue != value) 
							|| (this._IkonyGraczy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IkonyGraczy.Entity = null;
						previousValue.Graczes.Remove(this);
					}
					this._IkonyGraczy.Entity = value;
					if ((value != null))
					{
						value.Graczes.Add(this);
						this._profileIconId = value.profileIconId;
					}
					else
					{
						this._profileIconId = default(int);
					}
					this.SendPropertyChanged("IkonyGraczy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Regiony_Gracze", Storage="_Regiony", ThisKey="idRegionu", OtherKey="Id", IsForeignKey=true)]
		public Regiony Regiony
		{
			get
			{
				return this._Regiony.Entity;
			}
			set
			{
				Regiony previousValue = this._Regiony.Entity;
				if (((previousValue != value) 
							|| (this._Regiony.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Regiony.Entity = null;
						previousValue.Graczes.Remove(this);
					}
					this._Regiony.Entity = value;
					if ((value != null))
					{
						value.Graczes.Add(this);
						this._idRegionu = value.Id;
					}
					else
					{
						this._idRegionu = default(int);
					}
					this.SendPropertyChanged("Regiony");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Gries(Gry entity)
		{
			this.SendPropertyChanging();
			entity.Gracze = this;
		}
		
		private void detach_Gries(Gry entity)
		{
			this.SendPropertyChanging();
			entity.Gracze = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IkonyCzarow")]
	public partial class IkonyCzarow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _spellId;
		
		private string _ikona;
		
		private EntitySet<Gry> _Gries;
		
		private EntitySet<Gry> _Gries1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnspellIdChanging(int value);
    partial void OnspellIdChanged();
    partial void OnikonaChanging(string value);
    partial void OnikonaChanged();
    #endregion
		
		public IkonyCzarow()
		{
			this._Gries = new EntitySet<Gry>(new Action<Gry>(this.attach_Gries), new Action<Gry>(this.detach_Gries));
			this._Gries1 = new EntitySet<Gry>(new Action<Gry>(this.attach_Gries1), new Action<Gry>(this.detach_Gries1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spellId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int spellId
		{
			get
			{
				return this._spellId;
			}
			set
			{
				if ((this._spellId != value))
				{
					this.OnspellIdChanging(value);
					this.SendPropertyChanging();
					this._spellId = value;
					this.SendPropertyChanged("spellId");
					this.OnspellIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ikona", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ikona
		{
			get
			{
				return this._ikona;
			}
			set
			{
				if ((this._ikona != value))
				{
					this.OnikonaChanging(value);
					this.SendPropertyChanging();
					this._ikona = value;
					this.SendPropertyChanged("ikona");
					this.OnikonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyCzarow_Gry", Storage="_Gries", ThisKey="spellId", OtherKey="spell1")]
		public EntitySet<Gry> Gries
		{
			get
			{
				return this._Gries;
			}
			set
			{
				this._Gries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyCzarow_Gry1", Storage="_Gries1", ThisKey="spellId", OtherKey="spell2")]
		public EntitySet<Gry> Gries1
		{
			get
			{
				return this._Gries1;
			}
			set
			{
				this._Gries1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Gries(Gry entity)
		{
			this.SendPropertyChanging();
			entity.IkonyCzarow = this;
		}
		
		private void detach_Gries(Gry entity)
		{
			this.SendPropertyChanging();
			entity.IkonyCzarow = null;
		}
		
		private void attach_Gries1(Gry entity)
		{
			this.SendPropertyChanging();
			entity.IkonyCzarow1 = this;
		}
		
		private void detach_Gries1(Gry entity)
		{
			this.SendPropertyChanging();
			entity.IkonyCzarow1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IkonyGraczy")]
	public partial class IkonyGraczy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _profileIconId;
		
		private string _ikona;
		
		private EntitySet<Gracze> _Graczes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprofileIconIdChanging(int value);
    partial void OnprofileIconIdChanged();
    partial void OnikonaChanging(string value);
    partial void OnikonaChanged();
    #endregion
		
		public IkonyGraczy()
		{
			this._Graczes = new EntitySet<Gracze>(new Action<Gracze>(this.attach_Graczes), new Action<Gracze>(this.detach_Graczes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profileIconId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int profileIconId
		{
			get
			{
				return this._profileIconId;
			}
			set
			{
				if ((this._profileIconId != value))
				{
					this.OnprofileIconIdChanging(value);
					this.SendPropertyChanging();
					this._profileIconId = value;
					this.SendPropertyChanged("profileIconId");
					this.OnprofileIconIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ikona", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ikona
		{
			get
			{
				return this._ikona;
			}
			set
			{
				if ((this._ikona != value))
				{
					this.OnikonaChanging(value);
					this.SendPropertyChanging();
					this._ikona = value;
					this.SendPropertyChanged("ikona");
					this.OnikonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyGraczy_Gracze", Storage="_Graczes", ThisKey="profileIconId", OtherKey="profileIconId")]
		public EntitySet<Gracze> Graczes
		{
			get
			{
				return this._Graczes;
			}
			set
			{
				this._Graczes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Graczes(Gracze entity)
		{
			this.SendPropertyChanging();
			entity.IkonyGraczy = this;
		}
		
		private void detach_Graczes(Gracze entity)
		{
			this.SendPropertyChanging();
			entity.IkonyGraczy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IkonyPrzedmiotow")]
	public partial class IkonyPrzedmiotow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _itemId;
		
		private string _ikona;
		
		private EntitySet<Gry> _Gries;
		
		private EntitySet<Gry> _Gries1;
		
		private EntitySet<Gry> _Gries2;
		
		private EntitySet<Gry> _Gries3;
		
		private EntitySet<Gry> _Gries4;
		
		private EntitySet<Gry> _Gries5;
		
		private EntitySet<Gry> _Gries6;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnitemIdChanging(int value);
    partial void OnitemIdChanged();
    partial void OnikonaChanging(string value);
    partial void OnikonaChanged();
    #endregion
		
		public IkonyPrzedmiotow()
		{
			this._Gries = new EntitySet<Gry>(new Action<Gry>(this.attach_Gries), new Action<Gry>(this.detach_Gries));
			this._Gries1 = new EntitySet<Gry>(new Action<Gry>(this.attach_Gries1), new Action<Gry>(this.detach_Gries1));
			this._Gries2 = new EntitySet<Gry>(new Action<Gry>(this.attach_Gries2), new Action<Gry>(this.detach_Gries2));
			this._Gries3 = new EntitySet<Gry>(new Action<Gry>(this.attach_Gries3), new Action<Gry>(this.detach_Gries3));
			this._Gries4 = new EntitySet<Gry>(new Action<Gry>(this.attach_Gries4), new Action<Gry>(this.detach_Gries4));
			this._Gries5 = new EntitySet<Gry>(new Action<Gry>(this.attach_Gries5), new Action<Gry>(this.detach_Gries5));
			this._Gries6 = new EntitySet<Gry>(new Action<Gry>(this.attach_Gries6), new Action<Gry>(this.detach_Gries6));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int itemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					this.OnitemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("itemId");
					this.OnitemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ikona", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ikona
		{
			get
			{
				return this._ikona;
			}
			set
			{
				if ((this._ikona != value))
				{
					this.OnikonaChanging(value);
					this.SendPropertyChanging();
					this._ikona = value;
					this.SendPropertyChanged("ikona");
					this.OnikonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyPrzedmiotow_Gry", Storage="_Gries", ThisKey="itemId", OtherKey="item0")]
		public EntitySet<Gry> Gries
		{
			get
			{
				return this._Gries;
			}
			set
			{
				this._Gries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyPrzedmiotow_Gry1", Storage="_Gries1", ThisKey="itemId", OtherKey="item1")]
		public EntitySet<Gry> Gries1
		{
			get
			{
				return this._Gries1;
			}
			set
			{
				this._Gries1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyPrzedmiotow_Gry2", Storage="_Gries2", ThisKey="itemId", OtherKey="item2")]
		public EntitySet<Gry> Gries2
		{
			get
			{
				return this._Gries2;
			}
			set
			{
				this._Gries2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyPrzedmiotow_Gry3", Storage="_Gries3", ThisKey="itemId", OtherKey="item3")]
		public EntitySet<Gry> Gries3
		{
			get
			{
				return this._Gries3;
			}
			set
			{
				this._Gries3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyPrzedmiotow_Gry4", Storage="_Gries4", ThisKey="itemId", OtherKey="item4")]
		public EntitySet<Gry> Gries4
		{
			get
			{
				return this._Gries4;
			}
			set
			{
				this._Gries4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyPrzedmiotow_Gry5", Storage="_Gries5", ThisKey="itemId", OtherKey="item5")]
		public EntitySet<Gry> Gries5
		{
			get
			{
				return this._Gries5;
			}
			set
			{
				this._Gries5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyPrzedmiotow_Gry6", Storage="_Gries6", ThisKey="itemId", OtherKey="item6")]
		public EntitySet<Gry> Gries6
		{
			get
			{
				return this._Gries6;
			}
			set
			{
				this._Gries6.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Gries(Gry entity)
		{
			this.SendPropertyChanging();
			entity.IkonyPrzedmiotow = this;
		}
		
		private void detach_Gries(Gry entity)
		{
			this.SendPropertyChanging();
			entity.IkonyPrzedmiotow = null;
		}
		
		private void attach_Gries1(Gry entity)
		{
			this.SendPropertyChanging();
			entity.IkonyPrzedmiotow1 = this;
		}
		
		private void detach_Gries1(Gry entity)
		{
			this.SendPropertyChanging();
			entity.IkonyPrzedmiotow1 = null;
		}
		
		private void attach_Gries2(Gry entity)
		{
			this.SendPropertyChanging();
			entity.IkonyPrzedmiotow2 = this;
		}
		
		private void detach_Gries2(Gry entity)
		{
			this.SendPropertyChanging();
			entity.IkonyPrzedmiotow2 = null;
		}
		
		private void attach_Gries3(Gry entity)
		{
			this.SendPropertyChanging();
			entity.IkonyPrzedmiotow3 = this;
		}
		
		private void detach_Gries3(Gry entity)
		{
			this.SendPropertyChanging();
			entity.IkonyPrzedmiotow3 = null;
		}
		
		private void attach_Gries4(Gry entity)
		{
			this.SendPropertyChanging();
			entity.IkonyPrzedmiotow4 = this;
		}
		
		private void detach_Gries4(Gry entity)
		{
			this.SendPropertyChanging();
			entity.IkonyPrzedmiotow4 = null;
		}
		
		private void attach_Gries5(Gry entity)
		{
			this.SendPropertyChanging();
			entity.IkonyPrzedmiotow5 = this;
		}
		
		private void detach_Gries5(Gry entity)
		{
			this.SendPropertyChanging();
			entity.IkonyPrzedmiotow5 = null;
		}
		
		private void attach_Gries6(Gry entity)
		{
			this.SendPropertyChanging();
			entity.IkonyPrzedmiotow6 = this;
		}
		
		private void detach_Gries6(Gry entity)
		{
			this.SendPropertyChanging();
			entity.IkonyPrzedmiotow6 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Postacie")]
	public partial class Postacie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _championId;
		
		private string _name;
		
		private string _ikona;
		
		private EntitySet<Gry> _Gries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnchampionIdChanging(int value);
    partial void OnchampionIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnikonaChanging(string value);
    partial void OnikonaChanged();
    #endregion
		
		public Postacie()
		{
			this._Gries = new EntitySet<Gry>(new Action<Gry>(this.attach_Gries), new Action<Gry>(this.detach_Gries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_championId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int championId
		{
			get
			{
				return this._championId;
			}
			set
			{
				if ((this._championId != value))
				{
					this.OnchampionIdChanging(value);
					this.SendPropertyChanging();
					this._championId = value;
					this.SendPropertyChanged("championId");
					this.OnchampionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ikona", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ikona
		{
			get
			{
				return this._ikona;
			}
			set
			{
				if ((this._ikona != value))
				{
					this.OnikonaChanging(value);
					this.SendPropertyChanging();
					this._ikona = value;
					this.SendPropertyChanged("ikona");
					this.OnikonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Postacie_Gry", Storage="_Gries", ThisKey="championId", OtherKey="championId")]
		public EntitySet<Gry> Gries
		{
			get
			{
				return this._Gries;
			}
			set
			{
				this._Gries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Gries(Gry entity)
		{
			this.SendPropertyChanging();
			entity.Postacie = this;
		}
		
		private void detach_Gries(Gry entity)
		{
			this.SendPropertyChanging();
			entity.Postacie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Regiony")]
	public partial class Regiony : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private EntitySet<Gracze> _Graczes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Regiony()
		{
			this._Graczes = new EntitySet<Gracze>(new Action<Gracze>(this.attach_Graczes), new Action<Gracze>(this.detach_Graczes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Regiony_Gracze", Storage="_Graczes", ThisKey="Id", OtherKey="idRegionu")]
		public EntitySet<Gracze> Graczes
		{
			get
			{
				return this._Graczes;
			}
			set
			{
				this._Graczes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Graczes(Gracze entity)
		{
			this.SendPropertyChanging();
			entity.Regiony = this;
		}
		
		private void detach_Graczes(Gracze entity)
		{
			this.SendPropertyChanging();
			entity.Regiony = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gry")]
	public partial class Gry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private long _gameId;
		
		private long _summonerId;
		
		private int _championId;
		
		private int _spell1;
		
		private int _spell2;
		
		private int _ipEarned;
		
		private long _createDate;
		
		private int _level;
		
		private int _goldEarned;
		
		private int _numDeaths;
		
		private int _minionsKilled;
		
		private int _championsKilled;
		
		private int _totalDamageDealt;
		
		private int _totalDamageTaken;
		
		private int _team;
		
		private bool _win;
		
		private int _neutralMinionsKilled;
		
		private int _largestMultiKill;
		
		private int _physicalDamageDealtPlayer;
		
		private int _magicDamageDealtPlayer;
		
		private int _physicalDamageTaken;
		
		private int _magicDamageTaken;
		
		private int _timePlayed;
		
		private int _totalHeal;
		
		private int _assists;
		
		private int _item0;
		
		private int _item1;
		
		private int _item2;
		
		private int _item3;
		
		private int _item4;
		
		private int _item5;
		
		private int _item6;
		
		private int _sightWardsBought;
		
		private int _magicDamageDealtToChampions;
		
		private int _physicalDamageDealtToChampions;
		
		private int _totalDamageDealtToChampions;
		
		private int _trueDamageDealtPlayer;
		
		private int _trueDamageDealtToChampions;
		
		private int _trueDamageTaken;
		
		private int _wardKilled;
		
		private int _wardPlaced;
		
		private int _totalTimeCrowdControlDealt;
		
		private EntityRef<Gracze> _Gracze;
		
		private EntityRef<IkonyCzarow> _IkonyCzarow;
		
		private EntityRef<IkonyCzarow> _IkonyCzarow1;
		
		private EntityRef<IkonyPrzedmiotow> _IkonyPrzedmiotow;
		
		private EntityRef<IkonyPrzedmiotow> _IkonyPrzedmiotow1;
		
		private EntityRef<IkonyPrzedmiotow> _IkonyPrzedmiotow2;
		
		private EntityRef<IkonyPrzedmiotow> _IkonyPrzedmiotow3;
		
		private EntityRef<IkonyPrzedmiotow> _IkonyPrzedmiotow4;
		
		private EntityRef<IkonyPrzedmiotow> _IkonyPrzedmiotow5;
		
		private EntityRef<IkonyPrzedmiotow> _IkonyPrzedmiotow6;
		
		private EntityRef<Postacie> _Postacie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OngameIdChanging(long value);
    partial void OngameIdChanged();
    partial void OnsummonerIdChanging(long value);
    partial void OnsummonerIdChanged();
    partial void OnchampionIdChanging(int value);
    partial void OnchampionIdChanged();
    partial void Onspell1Changing(int value);
    partial void Onspell1Changed();
    partial void Onspell2Changing(int value);
    partial void Onspell2Changed();
    partial void OnipEarnedChanging(int value);
    partial void OnipEarnedChanged();
    partial void OncreateDateChanging(long value);
    partial void OncreateDateChanged();
    partial void OnlevelChanging(int value);
    partial void OnlevelChanged();
    partial void OngoldEarnedChanging(int value);
    partial void OngoldEarnedChanged();
    partial void OnnumDeathsChanging(int value);
    partial void OnnumDeathsChanged();
    partial void OnminionsKilledChanging(int value);
    partial void OnminionsKilledChanged();
    partial void OnchampionsKilledChanging(int value);
    partial void OnchampionsKilledChanged();
    partial void OntotalDamageDealtChanging(int value);
    partial void OntotalDamageDealtChanged();
    partial void OntotalDamageTakenChanging(int value);
    partial void OntotalDamageTakenChanged();
    partial void OnteamChanging(int value);
    partial void OnteamChanged();
    partial void OnwinChanging(bool value);
    partial void OnwinChanged();
    partial void OnneutralMinionsKilledChanging(int value);
    partial void OnneutralMinionsKilledChanged();
    partial void OnlargestMultiKillChanging(int value);
    partial void OnlargestMultiKillChanged();
    partial void OnphysicalDamageDealtPlayerChanging(int value);
    partial void OnphysicalDamageDealtPlayerChanged();
    partial void OnmagicDamageDealtPlayerChanging(int value);
    partial void OnmagicDamageDealtPlayerChanged();
    partial void OnphysicalDamageTakenChanging(int value);
    partial void OnphysicalDamageTakenChanged();
    partial void OnmagicDamageTakenChanging(int value);
    partial void OnmagicDamageTakenChanged();
    partial void OntimePlayedChanging(int value);
    partial void OntimePlayedChanged();
    partial void OntotalHealChanging(int value);
    partial void OntotalHealChanged();
    partial void OnassistsChanging(int value);
    partial void OnassistsChanged();
    partial void Onitem0Changing(int value);
    partial void Onitem0Changed();
    partial void Onitem1Changing(int value);
    partial void Onitem1Changed();
    partial void Onitem2Changing(int value);
    partial void Onitem2Changed();
    partial void Onitem3Changing(int value);
    partial void Onitem3Changed();
    partial void Onitem4Changing(int value);
    partial void Onitem4Changed();
    partial void Onitem5Changing(int value);
    partial void Onitem5Changed();
    partial void Onitem6Changing(int value);
    partial void Onitem6Changed();
    partial void OnsightWardsBoughtChanging(int value);
    partial void OnsightWardsBoughtChanged();
    partial void OnmagicDamageDealtToChampionsChanging(int value);
    partial void OnmagicDamageDealtToChampionsChanged();
    partial void OnphysicalDamageDealtToChampionsChanging(int value);
    partial void OnphysicalDamageDealtToChampionsChanged();
    partial void OntotalDamageDealtToChampionsChanging(int value);
    partial void OntotalDamageDealtToChampionsChanged();
    partial void OntrueDamageDealtPlayerChanging(int value);
    partial void OntrueDamageDealtPlayerChanged();
    partial void OntrueDamageDealtToChampionsChanging(int value);
    partial void OntrueDamageDealtToChampionsChanged();
    partial void OntrueDamageTakenChanging(int value);
    partial void OntrueDamageTakenChanged();
    partial void OnwardKilledChanging(int value);
    partial void OnwardKilledChanged();
    partial void OnwardPlacedChanging(int value);
    partial void OnwardPlacedChanged();
    partial void OntotalTimeCrowdControlDealtChanging(int value);
    partial void OntotalTimeCrowdControlDealtChanged();
    #endregion
		
		public Gry()
		{
			this._Gracze = default(EntityRef<Gracze>);
			this._IkonyCzarow = default(EntityRef<IkonyCzarow>);
			this._IkonyCzarow1 = default(EntityRef<IkonyCzarow>);
			this._IkonyPrzedmiotow = default(EntityRef<IkonyPrzedmiotow>);
			this._IkonyPrzedmiotow1 = default(EntityRef<IkonyPrzedmiotow>);
			this._IkonyPrzedmiotow2 = default(EntityRef<IkonyPrzedmiotow>);
			this._IkonyPrzedmiotow3 = default(EntityRef<IkonyPrzedmiotow>);
			this._IkonyPrzedmiotow4 = default(EntityRef<IkonyPrzedmiotow>);
			this._IkonyPrzedmiotow5 = default(EntityRef<IkonyPrzedmiotow>);
			this._IkonyPrzedmiotow6 = default(EntityRef<IkonyPrzedmiotow>);
			this._Postacie = default(EntityRef<Postacie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gameId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long gameId
		{
			get
			{
				return this._gameId;
			}
			set
			{
				if ((this._gameId != value))
				{
					this.OngameIdChanging(value);
					this.SendPropertyChanging();
					this._gameId = value;
					this.SendPropertyChanged("gameId");
					this.OngameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_summonerId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long summonerId
		{
			get
			{
				return this._summonerId;
			}
			set
			{
				if ((this._summonerId != value))
				{
					if (this._Gracze.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsummonerIdChanging(value);
					this.SendPropertyChanging();
					this._summonerId = value;
					this.SendPropertyChanged("summonerId");
					this.OnsummonerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_championId", DbType="Int NOT NULL")]
		public int championId
		{
			get
			{
				return this._championId;
			}
			set
			{
				if ((this._championId != value))
				{
					if (this._Postacie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnchampionIdChanging(value);
					this.SendPropertyChanging();
					this._championId = value;
					this.SendPropertyChanged("championId");
					this.OnchampionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spell1", DbType="Int NOT NULL")]
		public int spell1
		{
			get
			{
				return this._spell1;
			}
			set
			{
				if ((this._spell1 != value))
				{
					if (this._IkonyCzarow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onspell1Changing(value);
					this.SendPropertyChanging();
					this._spell1 = value;
					this.SendPropertyChanged("spell1");
					this.Onspell1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spell2", DbType="Int NOT NULL")]
		public int spell2
		{
			get
			{
				return this._spell2;
			}
			set
			{
				if ((this._spell2 != value))
				{
					if (this._IkonyCzarow1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onspell2Changing(value);
					this.SendPropertyChanging();
					this._spell2 = value;
					this.SendPropertyChanged("spell2");
					this.Onspell2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipEarned", DbType="Int NOT NULL")]
		public int ipEarned
		{
			get
			{
				return this._ipEarned;
			}
			set
			{
				if ((this._ipEarned != value))
				{
					this.OnipEarnedChanging(value);
					this.SendPropertyChanging();
					this._ipEarned = value;
					this.SendPropertyChanged("ipEarned");
					this.OnipEarnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="BigInt NOT NULL")]
		public long createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this.OncreateDateChanging(value);
					this.SendPropertyChanging();
					this._createDate = value;
					this.SendPropertyChanged("createDate");
					this.OncreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[level]", Storage="_level", DbType="Int NOT NULL")]
		public int level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this.OnlevelChanging(value);
					this.SendPropertyChanging();
					this._level = value;
					this.SendPropertyChanged("level");
					this.OnlevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goldEarned", DbType="Int NOT NULL")]
		public int goldEarned
		{
			get
			{
				return this._goldEarned;
			}
			set
			{
				if ((this._goldEarned != value))
				{
					this.OngoldEarnedChanging(value);
					this.SendPropertyChanging();
					this._goldEarned = value;
					this.SendPropertyChanged("goldEarned");
					this.OngoldEarnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numDeaths", DbType="Int NOT NULL")]
		public int numDeaths
		{
			get
			{
				return this._numDeaths;
			}
			set
			{
				if ((this._numDeaths != value))
				{
					this.OnnumDeathsChanging(value);
					this.SendPropertyChanging();
					this._numDeaths = value;
					this.SendPropertyChanged("numDeaths");
					this.OnnumDeathsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minionsKilled", DbType="Int NOT NULL")]
		public int minionsKilled
		{
			get
			{
				return this._minionsKilled;
			}
			set
			{
				if ((this._minionsKilled != value))
				{
					this.OnminionsKilledChanging(value);
					this.SendPropertyChanging();
					this._minionsKilled = value;
					this.SendPropertyChanged("minionsKilled");
					this.OnminionsKilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_championsKilled", DbType="Int NOT NULL")]
		public int championsKilled
		{
			get
			{
				return this._championsKilled;
			}
			set
			{
				if ((this._championsKilled != value))
				{
					this.OnchampionsKilledChanging(value);
					this.SendPropertyChanging();
					this._championsKilled = value;
					this.SendPropertyChanged("championsKilled");
					this.OnchampionsKilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalDamageDealt", DbType="Int NOT NULL")]
		public int totalDamageDealt
		{
			get
			{
				return this._totalDamageDealt;
			}
			set
			{
				if ((this._totalDamageDealt != value))
				{
					this.OntotalDamageDealtChanging(value);
					this.SendPropertyChanging();
					this._totalDamageDealt = value;
					this.SendPropertyChanged("totalDamageDealt");
					this.OntotalDamageDealtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalDamageTaken", DbType="Int NOT NULL")]
		public int totalDamageTaken
		{
			get
			{
				return this._totalDamageTaken;
			}
			set
			{
				if ((this._totalDamageTaken != value))
				{
					this.OntotalDamageTakenChanging(value);
					this.SendPropertyChanging();
					this._totalDamageTaken = value;
					this.SendPropertyChanged("totalDamageTaken");
					this.OntotalDamageTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team", DbType="Int NOT NULL")]
		public int team
		{
			get
			{
				return this._team;
			}
			set
			{
				if ((this._team != value))
				{
					this.OnteamChanging(value);
					this.SendPropertyChanging();
					this._team = value;
					this.SendPropertyChanged("team");
					this.OnteamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_win", DbType="Bit NOT NULL")]
		public bool win
		{
			get
			{
				return this._win;
			}
			set
			{
				if ((this._win != value))
				{
					this.OnwinChanging(value);
					this.SendPropertyChanging();
					this._win = value;
					this.SendPropertyChanged("win");
					this.OnwinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_neutralMinionsKilled", DbType="Int NOT NULL")]
		public int neutralMinionsKilled
		{
			get
			{
				return this._neutralMinionsKilled;
			}
			set
			{
				if ((this._neutralMinionsKilled != value))
				{
					this.OnneutralMinionsKilledChanging(value);
					this.SendPropertyChanging();
					this._neutralMinionsKilled = value;
					this.SendPropertyChanged("neutralMinionsKilled");
					this.OnneutralMinionsKilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_largestMultiKill", DbType="Int NOT NULL")]
		public int largestMultiKill
		{
			get
			{
				return this._largestMultiKill;
			}
			set
			{
				if ((this._largestMultiKill != value))
				{
					this.OnlargestMultiKillChanging(value);
					this.SendPropertyChanging();
					this._largestMultiKill = value;
					this.SendPropertyChanged("largestMultiKill");
					this.OnlargestMultiKillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_physicalDamageDealtPlayer", DbType="Int NOT NULL")]
		public int physicalDamageDealtPlayer
		{
			get
			{
				return this._physicalDamageDealtPlayer;
			}
			set
			{
				if ((this._physicalDamageDealtPlayer != value))
				{
					this.OnphysicalDamageDealtPlayerChanging(value);
					this.SendPropertyChanging();
					this._physicalDamageDealtPlayer = value;
					this.SendPropertyChanged("physicalDamageDealtPlayer");
					this.OnphysicalDamageDealtPlayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_magicDamageDealtPlayer", DbType="Int NOT NULL")]
		public int magicDamageDealtPlayer
		{
			get
			{
				return this._magicDamageDealtPlayer;
			}
			set
			{
				if ((this._magicDamageDealtPlayer != value))
				{
					this.OnmagicDamageDealtPlayerChanging(value);
					this.SendPropertyChanging();
					this._magicDamageDealtPlayer = value;
					this.SendPropertyChanged("magicDamageDealtPlayer");
					this.OnmagicDamageDealtPlayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_physicalDamageTaken", DbType="Int NOT NULL")]
		public int physicalDamageTaken
		{
			get
			{
				return this._physicalDamageTaken;
			}
			set
			{
				if ((this._physicalDamageTaken != value))
				{
					this.OnphysicalDamageTakenChanging(value);
					this.SendPropertyChanging();
					this._physicalDamageTaken = value;
					this.SendPropertyChanged("physicalDamageTaken");
					this.OnphysicalDamageTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_magicDamageTaken", DbType="Int NOT NULL")]
		public int magicDamageTaken
		{
			get
			{
				return this._magicDamageTaken;
			}
			set
			{
				if ((this._magicDamageTaken != value))
				{
					this.OnmagicDamageTakenChanging(value);
					this.SendPropertyChanging();
					this._magicDamageTaken = value;
					this.SendPropertyChanged("magicDamageTaken");
					this.OnmagicDamageTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timePlayed", DbType="Int NOT NULL")]
		public int timePlayed
		{
			get
			{
				return this._timePlayed;
			}
			set
			{
				if ((this._timePlayed != value))
				{
					this.OntimePlayedChanging(value);
					this.SendPropertyChanging();
					this._timePlayed = value;
					this.SendPropertyChanged("timePlayed");
					this.OntimePlayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalHeal", DbType="Int NOT NULL")]
		public int totalHeal
		{
			get
			{
				return this._totalHeal;
			}
			set
			{
				if ((this._totalHeal != value))
				{
					this.OntotalHealChanging(value);
					this.SendPropertyChanging();
					this._totalHeal = value;
					this.SendPropertyChanged("totalHeal");
					this.OntotalHealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assists", DbType="Int NOT NULL")]
		public int assists
		{
			get
			{
				return this._assists;
			}
			set
			{
				if ((this._assists != value))
				{
					this.OnassistsChanging(value);
					this.SendPropertyChanging();
					this._assists = value;
					this.SendPropertyChanged("assists");
					this.OnassistsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item0", DbType="Int NOT NULL")]
		public int item0
		{
			get
			{
				return this._item0;
			}
			set
			{
				if ((this._item0 != value))
				{
					if (this._IkonyPrzedmiotow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem0Changing(value);
					this.SendPropertyChanging();
					this._item0 = value;
					this.SendPropertyChanged("item0");
					this.Onitem0Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item1", DbType="Int NOT NULL")]
		public int item1
		{
			get
			{
				return this._item1;
			}
			set
			{
				if ((this._item1 != value))
				{
					if (this._IkonyPrzedmiotow1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem1Changing(value);
					this.SendPropertyChanging();
					this._item1 = value;
					this.SendPropertyChanged("item1");
					this.Onitem1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item2", DbType="Int NOT NULL")]
		public int item2
		{
			get
			{
				return this._item2;
			}
			set
			{
				if ((this._item2 != value))
				{
					if (this._IkonyPrzedmiotow2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem2Changing(value);
					this.SendPropertyChanging();
					this._item2 = value;
					this.SendPropertyChanged("item2");
					this.Onitem2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item3", DbType="Int NOT NULL")]
		public int item3
		{
			get
			{
				return this._item3;
			}
			set
			{
				if ((this._item3 != value))
				{
					if (this._IkonyPrzedmiotow3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem3Changing(value);
					this.SendPropertyChanging();
					this._item3 = value;
					this.SendPropertyChanged("item3");
					this.Onitem3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item4", DbType="Int NOT NULL")]
		public int item4
		{
			get
			{
				return this._item4;
			}
			set
			{
				if ((this._item4 != value))
				{
					if (this._IkonyPrzedmiotow4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem4Changing(value);
					this.SendPropertyChanging();
					this._item4 = value;
					this.SendPropertyChanged("item4");
					this.Onitem4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item5", DbType="Int NOT NULL")]
		public int item5
		{
			get
			{
				return this._item5;
			}
			set
			{
				if ((this._item5 != value))
				{
					if (this._IkonyPrzedmiotow5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem5Changing(value);
					this.SendPropertyChanging();
					this._item5 = value;
					this.SendPropertyChanged("item5");
					this.Onitem5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item6", DbType="Int NOT NULL")]
		public int item6
		{
			get
			{
				return this._item6;
			}
			set
			{
				if ((this._item6 != value))
				{
					if (this._IkonyPrzedmiotow6.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem6Changing(value);
					this.SendPropertyChanging();
					this._item6 = value;
					this.SendPropertyChanged("item6");
					this.Onitem6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sightWardsBought", DbType="Int NOT NULL")]
		public int sightWardsBought
		{
			get
			{
				return this._sightWardsBought;
			}
			set
			{
				if ((this._sightWardsBought != value))
				{
					this.OnsightWardsBoughtChanging(value);
					this.SendPropertyChanging();
					this._sightWardsBought = value;
					this.SendPropertyChanged("sightWardsBought");
					this.OnsightWardsBoughtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_magicDamageDealtToChampions", DbType="Int NOT NULL")]
		public int magicDamageDealtToChampions
		{
			get
			{
				return this._magicDamageDealtToChampions;
			}
			set
			{
				if ((this._magicDamageDealtToChampions != value))
				{
					this.OnmagicDamageDealtToChampionsChanging(value);
					this.SendPropertyChanging();
					this._magicDamageDealtToChampions = value;
					this.SendPropertyChanged("magicDamageDealtToChampions");
					this.OnmagicDamageDealtToChampionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_physicalDamageDealtToChampions", DbType="Int NOT NULL")]
		public int physicalDamageDealtToChampions
		{
			get
			{
				return this._physicalDamageDealtToChampions;
			}
			set
			{
				if ((this._physicalDamageDealtToChampions != value))
				{
					this.OnphysicalDamageDealtToChampionsChanging(value);
					this.SendPropertyChanging();
					this._physicalDamageDealtToChampions = value;
					this.SendPropertyChanged("physicalDamageDealtToChampions");
					this.OnphysicalDamageDealtToChampionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalDamageDealtToChampions", DbType="Int NOT NULL")]
		public int totalDamageDealtToChampions
		{
			get
			{
				return this._totalDamageDealtToChampions;
			}
			set
			{
				if ((this._totalDamageDealtToChampions != value))
				{
					this.OntotalDamageDealtToChampionsChanging(value);
					this.SendPropertyChanging();
					this._totalDamageDealtToChampions = value;
					this.SendPropertyChanged("totalDamageDealtToChampions");
					this.OntotalDamageDealtToChampionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trueDamageDealtPlayer", DbType="Int NOT NULL")]
		public int trueDamageDealtPlayer
		{
			get
			{
				return this._trueDamageDealtPlayer;
			}
			set
			{
				if ((this._trueDamageDealtPlayer != value))
				{
					this.OntrueDamageDealtPlayerChanging(value);
					this.SendPropertyChanging();
					this._trueDamageDealtPlayer = value;
					this.SendPropertyChanged("trueDamageDealtPlayer");
					this.OntrueDamageDealtPlayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trueDamageDealtToChampions", DbType="Int NOT NULL")]
		public int trueDamageDealtToChampions
		{
			get
			{
				return this._trueDamageDealtToChampions;
			}
			set
			{
				if ((this._trueDamageDealtToChampions != value))
				{
					this.OntrueDamageDealtToChampionsChanging(value);
					this.SendPropertyChanging();
					this._trueDamageDealtToChampions = value;
					this.SendPropertyChanged("trueDamageDealtToChampions");
					this.OntrueDamageDealtToChampionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trueDamageTaken", DbType="Int NOT NULL")]
		public int trueDamageTaken
		{
			get
			{
				return this._trueDamageTaken;
			}
			set
			{
				if ((this._trueDamageTaken != value))
				{
					this.OntrueDamageTakenChanging(value);
					this.SendPropertyChanging();
					this._trueDamageTaken = value;
					this.SendPropertyChanged("trueDamageTaken");
					this.OntrueDamageTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wardKilled", DbType="Int NOT NULL")]
		public int wardKilled
		{
			get
			{
				return this._wardKilled;
			}
			set
			{
				if ((this._wardKilled != value))
				{
					this.OnwardKilledChanging(value);
					this.SendPropertyChanging();
					this._wardKilled = value;
					this.SendPropertyChanged("wardKilled");
					this.OnwardKilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wardPlaced", DbType="Int NOT NULL")]
		public int wardPlaced
		{
			get
			{
				return this._wardPlaced;
			}
			set
			{
				if ((this._wardPlaced != value))
				{
					this.OnwardPlacedChanging(value);
					this.SendPropertyChanging();
					this._wardPlaced = value;
					this.SendPropertyChanged("wardPlaced");
					this.OnwardPlacedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalTimeCrowdControlDealt", DbType="Int NOT NULL")]
		public int totalTimeCrowdControlDealt
		{
			get
			{
				return this._totalTimeCrowdControlDealt;
			}
			set
			{
				if ((this._totalTimeCrowdControlDealt != value))
				{
					this.OntotalTimeCrowdControlDealtChanging(value);
					this.SendPropertyChanging();
					this._totalTimeCrowdControlDealt = value;
					this.SendPropertyChanged("totalTimeCrowdControlDealt");
					this.OntotalTimeCrowdControlDealtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gracze_Gry", Storage="_Gracze", ThisKey="summonerId", OtherKey="Id", IsForeignKey=true)]
		public Gracze Gracze
		{
			get
			{
				return this._Gracze.Entity;
			}
			set
			{
				Gracze previousValue = this._Gracze.Entity;
				if (((previousValue != value) 
							|| (this._Gracze.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gracze.Entity = null;
						previousValue.Gries.Remove(this);
					}
					this._Gracze.Entity = value;
					if ((value != null))
					{
						value.Gries.Add(this);
						this._summonerId = value.Id;
					}
					else
					{
						this._summonerId = default(long);
					}
					this.SendPropertyChanged("Gracze");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyCzarow_Gry", Storage="_IkonyCzarow", ThisKey="spell1", OtherKey="spellId", IsForeignKey=true)]
		public IkonyCzarow IkonyCzarow
		{
			get
			{
				return this._IkonyCzarow.Entity;
			}
			set
			{
				IkonyCzarow previousValue = this._IkonyCzarow.Entity;
				if (((previousValue != value) 
							|| (this._IkonyCzarow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IkonyCzarow.Entity = null;
						previousValue.Gries.Remove(this);
					}
					this._IkonyCzarow.Entity = value;
					if ((value != null))
					{
						value.Gries.Add(this);
						this._spell1 = value.spellId;
					}
					else
					{
						this._spell1 = default(int);
					}
					this.SendPropertyChanged("IkonyCzarow");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyCzarow_Gry1", Storage="_IkonyCzarow1", ThisKey="spell2", OtherKey="spellId", IsForeignKey=true)]
		public IkonyCzarow IkonyCzarow1
		{
			get
			{
				return this._IkonyCzarow1.Entity;
			}
			set
			{
				IkonyCzarow previousValue = this._IkonyCzarow1.Entity;
				if (((previousValue != value) 
							|| (this._IkonyCzarow1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IkonyCzarow1.Entity = null;
						previousValue.Gries1.Remove(this);
					}
					this._IkonyCzarow1.Entity = value;
					if ((value != null))
					{
						value.Gries1.Add(this);
						this._spell2 = value.spellId;
					}
					else
					{
						this._spell2 = default(int);
					}
					this.SendPropertyChanged("IkonyCzarow1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyPrzedmiotow_Gry", Storage="_IkonyPrzedmiotow", ThisKey="item0", OtherKey="itemId", IsForeignKey=true)]
		public IkonyPrzedmiotow IkonyPrzedmiotow
		{
			get
			{
				return this._IkonyPrzedmiotow.Entity;
			}
			set
			{
				IkonyPrzedmiotow previousValue = this._IkonyPrzedmiotow.Entity;
				if (((previousValue != value) 
							|| (this._IkonyPrzedmiotow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IkonyPrzedmiotow.Entity = null;
						previousValue.Gries.Remove(this);
					}
					this._IkonyPrzedmiotow.Entity = value;
					if ((value != null))
					{
						value.Gries.Add(this);
						this._item0 = value.itemId;
					}
					else
					{
						this._item0 = default(int);
					}
					this.SendPropertyChanged("IkonyPrzedmiotow");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyPrzedmiotow_Gry1", Storage="_IkonyPrzedmiotow1", ThisKey="item1", OtherKey="itemId", IsForeignKey=true)]
		public IkonyPrzedmiotow IkonyPrzedmiotow1
		{
			get
			{
				return this._IkonyPrzedmiotow1.Entity;
			}
			set
			{
				IkonyPrzedmiotow previousValue = this._IkonyPrzedmiotow1.Entity;
				if (((previousValue != value) 
							|| (this._IkonyPrzedmiotow1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IkonyPrzedmiotow1.Entity = null;
						previousValue.Gries1.Remove(this);
					}
					this._IkonyPrzedmiotow1.Entity = value;
					if ((value != null))
					{
						value.Gries1.Add(this);
						this._item1 = value.itemId;
					}
					else
					{
						this._item1 = default(int);
					}
					this.SendPropertyChanged("IkonyPrzedmiotow1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyPrzedmiotow_Gry2", Storage="_IkonyPrzedmiotow2", ThisKey="item2", OtherKey="itemId", IsForeignKey=true)]
		public IkonyPrzedmiotow IkonyPrzedmiotow2
		{
			get
			{
				return this._IkonyPrzedmiotow2.Entity;
			}
			set
			{
				IkonyPrzedmiotow previousValue = this._IkonyPrzedmiotow2.Entity;
				if (((previousValue != value) 
							|| (this._IkonyPrzedmiotow2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IkonyPrzedmiotow2.Entity = null;
						previousValue.Gries2.Remove(this);
					}
					this._IkonyPrzedmiotow2.Entity = value;
					if ((value != null))
					{
						value.Gries2.Add(this);
						this._item2 = value.itemId;
					}
					else
					{
						this._item2 = default(int);
					}
					this.SendPropertyChanged("IkonyPrzedmiotow2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyPrzedmiotow_Gry3", Storage="_IkonyPrzedmiotow3", ThisKey="item3", OtherKey="itemId", IsForeignKey=true)]
		public IkonyPrzedmiotow IkonyPrzedmiotow3
		{
			get
			{
				return this._IkonyPrzedmiotow3.Entity;
			}
			set
			{
				IkonyPrzedmiotow previousValue = this._IkonyPrzedmiotow3.Entity;
				if (((previousValue != value) 
							|| (this._IkonyPrzedmiotow3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IkonyPrzedmiotow3.Entity = null;
						previousValue.Gries3.Remove(this);
					}
					this._IkonyPrzedmiotow3.Entity = value;
					if ((value != null))
					{
						value.Gries3.Add(this);
						this._item3 = value.itemId;
					}
					else
					{
						this._item3 = default(int);
					}
					this.SendPropertyChanged("IkonyPrzedmiotow3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyPrzedmiotow_Gry4", Storage="_IkonyPrzedmiotow4", ThisKey="item4", OtherKey="itemId", IsForeignKey=true)]
		public IkonyPrzedmiotow IkonyPrzedmiotow4
		{
			get
			{
				return this._IkonyPrzedmiotow4.Entity;
			}
			set
			{
				IkonyPrzedmiotow previousValue = this._IkonyPrzedmiotow4.Entity;
				if (((previousValue != value) 
							|| (this._IkonyPrzedmiotow4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IkonyPrzedmiotow4.Entity = null;
						previousValue.Gries4.Remove(this);
					}
					this._IkonyPrzedmiotow4.Entity = value;
					if ((value != null))
					{
						value.Gries4.Add(this);
						this._item4 = value.itemId;
					}
					else
					{
						this._item4 = default(int);
					}
					this.SendPropertyChanged("IkonyPrzedmiotow4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyPrzedmiotow_Gry5", Storage="_IkonyPrzedmiotow5", ThisKey="item5", OtherKey="itemId", IsForeignKey=true)]
		public IkonyPrzedmiotow IkonyPrzedmiotow5
		{
			get
			{
				return this._IkonyPrzedmiotow5.Entity;
			}
			set
			{
				IkonyPrzedmiotow previousValue = this._IkonyPrzedmiotow5.Entity;
				if (((previousValue != value) 
							|| (this._IkonyPrzedmiotow5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IkonyPrzedmiotow5.Entity = null;
						previousValue.Gries5.Remove(this);
					}
					this._IkonyPrzedmiotow5.Entity = value;
					if ((value != null))
					{
						value.Gries5.Add(this);
						this._item5 = value.itemId;
					}
					else
					{
						this._item5 = default(int);
					}
					this.SendPropertyChanged("IkonyPrzedmiotow5");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IkonyPrzedmiotow_Gry6", Storage="_IkonyPrzedmiotow6", ThisKey="item6", OtherKey="itemId", IsForeignKey=true)]
		public IkonyPrzedmiotow IkonyPrzedmiotow6
		{
			get
			{
				return this._IkonyPrzedmiotow6.Entity;
			}
			set
			{
				IkonyPrzedmiotow previousValue = this._IkonyPrzedmiotow6.Entity;
				if (((previousValue != value) 
							|| (this._IkonyPrzedmiotow6.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IkonyPrzedmiotow6.Entity = null;
						previousValue.Gries6.Remove(this);
					}
					this._IkonyPrzedmiotow6.Entity = value;
					if ((value != null))
					{
						value.Gries6.Add(this);
						this._item6 = value.itemId;
					}
					else
					{
						this._item6 = default(int);
					}
					this.SendPropertyChanged("IkonyPrzedmiotow6");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Postacie_Gry", Storage="_Postacie", ThisKey="championId", OtherKey="championId", IsForeignKey=true)]
		public Postacie Postacie
		{
			get
			{
				return this._Postacie.Entity;
			}
			set
			{
				Postacie previousValue = this._Postacie.Entity;
				if (((previousValue != value) 
							|| (this._Postacie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Postacie.Entity = null;
						previousValue.Gries.Remove(this);
					}
					this._Postacie.Entity = value;
					if ((value != null))
					{
						value.Gries.Add(this);
						this._championId = value.championId;
					}
					else
					{
						this._championId = default(int);
					}
					this.SendPropertyChanged("Postacie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
