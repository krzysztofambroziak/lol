#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Projekt_LOL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="baza")]
	public partial class bazaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGracze(Gracze instance);
    partial void UpdateGracze(Gracze instance);
    partial void DeleteGracze(Gracze instance);
    partial void InsertGryStatystyki(GryStatystyki instance);
    partial void UpdateGryStatystyki(GryStatystyki instance);
    partial void DeleteGryStatystyki(GryStatystyki instance);
    partial void InsertGryOgolnie(GryOgolnie instance);
    partial void UpdateGryOgolnie(GryOgolnie instance);
    partial void DeleteGryOgolnie(GryOgolnie instance);
    #endregion
		
		public bazaDataContext() : 
				base(global::Projekt_LOL.Properties.Settings.Default.bazaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public bazaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public bazaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public bazaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public bazaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Gracze> Graczes
		{
			get
			{
				return this.GetTable<Gracze>();
			}
		}
		
		public System.Data.Linq.Table<GryStatystyki> GryStatystykis
		{
			get
			{
				return this.GetTable<GryStatystyki>();
			}
		}
		
		public System.Data.Linq.Table<GryOgolnie> GryOgolnies
		{
			get
			{
				return this.GetTable<GryOgolnie>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gracze")]
	public partial class Gracze : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private int _profileIconId;
		
		private System.DateTime _revisionDate;
		
		private long _summonerLevel;
		
		private EntitySet<GryOgolnie> _GryOgolnies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnprofileIconIdChanging(int value);
    partial void OnprofileIconIdChanged();
    partial void OnrevisionDateChanging(System.DateTime value);
    partial void OnrevisionDateChanged();
    partial void OnsummonerLevelChanging(long value);
    partial void OnsummonerLevelChanged();
    #endregion
		
		public Gracze()
		{
			this._GryOgolnies = new EntitySet<GryOgolnie>(new Action<GryOgolnie>(this.attach_GryOgolnies), new Action<GryOgolnie>(this.detach_GryOgolnies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profileIconId", DbType="Int NOT NULL")]
		public int profileIconId
		{
			get
			{
				return this._profileIconId;
			}
			set
			{
				if ((this._profileIconId != value))
				{
					this.OnprofileIconIdChanging(value);
					this.SendPropertyChanging();
					this._profileIconId = value;
					this.SendPropertyChanged("profileIconId");
					this.OnprofileIconIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_revisionDate", DbType="Date NOT NULL")]
		public System.DateTime revisionDate
		{
			get
			{
				return this._revisionDate;
			}
			set
			{
				if ((this._revisionDate != value))
				{
					this.OnrevisionDateChanging(value);
					this.SendPropertyChanging();
					this._revisionDate = value;
					this.SendPropertyChanged("revisionDate");
					this.OnrevisionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_summonerLevel", DbType="BigInt NOT NULL")]
		public long summonerLevel
		{
			get
			{
				return this._summonerLevel;
			}
			set
			{
				if ((this._summonerLevel != value))
				{
					this.OnsummonerLevelChanging(value);
					this.SendPropertyChanging();
					this._summonerLevel = value;
					this.SendPropertyChanged("summonerLevel");
					this.OnsummonerLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gracze_GryOgolnie", Storage="_GryOgolnies", ThisKey="id", OtherKey="summonerId")]
		public EntitySet<GryOgolnie> GryOgolnies
		{
			get
			{
				return this._GryOgolnies;
			}
			set
			{
				this._GryOgolnies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GryOgolnies(GryOgolnie entity)
		{
			this.SendPropertyChanging();
			entity.Gracze = this;
		}
		
		private void detach_GryOgolnies(GryOgolnie entity)
		{
			this.SendPropertyChanging();
			entity.Gracze = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GryStatystyki")]
	public partial class GryStatystyki : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _gameId;
		
		private int _level;
		
		private int _goldEarned;
		
		private int _numDeaths;
		
		private int _turretsKilled;
		
		private int _minionsKilled;
		
		private int _championsKilled;
		
		private int _goldSpent;
		
		private int _totalDamageDealt;
		
		private int _totalDamageTaken;
		
		private int _team;
		
		private bool _win;
		
		private int _neturalMinionsKilled;
		
		private int _largestMultiKill;
		
		private int _physicalDamageDealtPlayer;
		
		private int _physicalDamageTaken;
		
		private int _magicDamageTaken;
		
		private int _largestCriticalStrike;
		
		private int _timePlayed;
		
		private int _totalHeal;
		
		private int _totalUnitsHealed;
		
		private int _assists;
		
		private int _item0;
		
		private int _item1;
		
		private int _item2;
		
		private int _item3;
		
		private int _item4;
		
		private int _item5;
		
		private int _item6;
		
		private int _physicalDamageDealtToChampions;
		
		private int _totalDamageDealtToChampions;
		
		private int _trueDamageTaken;
		
		private int _wardKilled;
		
		private int _wardPlaced;
		
		private int _neutralMinionsKilledYourJungle;
		
		private int _totalTimeCrowdControlDealt;
		
		private int _playerRole;
		
		private int _playerPosition;
		
		private EntitySet<GryOgolnie> _GryOgolnies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OngameIdChanging(long value);
    partial void OngameIdChanged();
    partial void OnlevelChanging(int value);
    partial void OnlevelChanged();
    partial void OngoldEarnedChanging(int value);
    partial void OngoldEarnedChanged();
    partial void OnnumDeathsChanging(int value);
    partial void OnnumDeathsChanged();
    partial void OnturretsKilledChanging(int value);
    partial void OnturretsKilledChanged();
    partial void OnminionsKilledChanging(int value);
    partial void OnminionsKilledChanged();
    partial void OnchampionsKilledChanging(int value);
    partial void OnchampionsKilledChanged();
    partial void OngoldSpentChanging(int value);
    partial void OngoldSpentChanged();
    partial void OntotalDamageDealtChanging(int value);
    partial void OntotalDamageDealtChanged();
    partial void OntotalDamageTakenChanging(int value);
    partial void OntotalDamageTakenChanged();
    partial void OnteamChanging(int value);
    partial void OnteamChanged();
    partial void OnwinChanging(bool value);
    partial void OnwinChanged();
    partial void OnneturalMinionsKilledChanging(int value);
    partial void OnneturalMinionsKilledChanged();
    partial void OnlargestMultiKillChanging(int value);
    partial void OnlargestMultiKillChanged();
    partial void OnphysicalDamageDealtPlayerChanging(int value);
    partial void OnphysicalDamageDealtPlayerChanged();
    partial void OnphysicalDamageTakenChanging(int value);
    partial void OnphysicalDamageTakenChanged();
    partial void OnmagicDamageTakenChanging(int value);
    partial void OnmagicDamageTakenChanged();
    partial void OnlargestCriticalStrikeChanging(int value);
    partial void OnlargestCriticalStrikeChanged();
    partial void OntimePlayedChanging(int value);
    partial void OntimePlayedChanged();
    partial void OntotalHealChanging(int value);
    partial void OntotalHealChanged();
    partial void OntotalUnitsHealedChanging(int value);
    partial void OntotalUnitsHealedChanged();
    partial void OnassistsChanging(int value);
    partial void OnassistsChanged();
    partial void Onitem0Changing(int value);
    partial void Onitem0Changed();
    partial void Onitem1Changing(int value);
    partial void Onitem1Changed();
    partial void Onitem2Changing(int value);
    partial void Onitem2Changed();
    partial void Onitem3Changing(int value);
    partial void Onitem3Changed();
    partial void Onitem4Changing(int value);
    partial void Onitem4Changed();
    partial void Onitem5Changing(int value);
    partial void Onitem5Changed();
    partial void Onitem6Changing(int value);
    partial void Onitem6Changed();
    partial void OnphysicalDamageDealtToChampionsChanging(int value);
    partial void OnphysicalDamageDealtToChampionsChanged();
    partial void OntotalDamageDealtToChampionsChanging(int value);
    partial void OntotalDamageDealtToChampionsChanged();
    partial void OntrueDamageTakenChanging(int value);
    partial void OntrueDamageTakenChanged();
    partial void OnwardKilledChanging(int value);
    partial void OnwardKilledChanged();
    partial void OnwardPlacedChanging(int value);
    partial void OnwardPlacedChanged();
    partial void OnneutralMinionsKilledYourJungleChanging(int value);
    partial void OnneutralMinionsKilledYourJungleChanged();
    partial void OntotalTimeCrowdControlDealtChanging(int value);
    partial void OntotalTimeCrowdControlDealtChanged();
    partial void OnplayerRoleChanging(int value);
    partial void OnplayerRoleChanged();
    partial void OnplayerPositionChanging(int value);
    partial void OnplayerPositionChanged();
    #endregion
		
		public GryStatystyki()
		{
			this._GryOgolnies = new EntitySet<GryOgolnie>(new Action<GryOgolnie>(this.attach_GryOgolnies), new Action<GryOgolnie>(this.detach_GryOgolnies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gameId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long gameId
		{
			get
			{
				return this._gameId;
			}
			set
			{
				if ((this._gameId != value))
				{
					this.OngameIdChanging(value);
					this.SendPropertyChanging();
					this._gameId = value;
					this.SendPropertyChanged("gameId");
					this.OngameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[level]", Storage="_level", DbType="Int NOT NULL")]
		public int level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this.OnlevelChanging(value);
					this.SendPropertyChanging();
					this._level = value;
					this.SendPropertyChanged("level");
					this.OnlevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goldEarned", DbType="Int NOT NULL")]
		public int goldEarned
		{
			get
			{
				return this._goldEarned;
			}
			set
			{
				if ((this._goldEarned != value))
				{
					this.OngoldEarnedChanging(value);
					this.SendPropertyChanging();
					this._goldEarned = value;
					this.SendPropertyChanged("goldEarned");
					this.OngoldEarnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numDeaths", DbType="Int NOT NULL")]
		public int numDeaths
		{
			get
			{
				return this._numDeaths;
			}
			set
			{
				if ((this._numDeaths != value))
				{
					this.OnnumDeathsChanging(value);
					this.SendPropertyChanging();
					this._numDeaths = value;
					this.SendPropertyChanged("numDeaths");
					this.OnnumDeathsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_turretsKilled", DbType="Int NOT NULL")]
		public int turretsKilled
		{
			get
			{
				return this._turretsKilled;
			}
			set
			{
				if ((this._turretsKilled != value))
				{
					this.OnturretsKilledChanging(value);
					this.SendPropertyChanging();
					this._turretsKilled = value;
					this.SendPropertyChanged("turretsKilled");
					this.OnturretsKilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minionsKilled", DbType="Int NOT NULL")]
		public int minionsKilled
		{
			get
			{
				return this._minionsKilled;
			}
			set
			{
				if ((this._minionsKilled != value))
				{
					this.OnminionsKilledChanging(value);
					this.SendPropertyChanging();
					this._minionsKilled = value;
					this.SendPropertyChanged("minionsKilled");
					this.OnminionsKilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_championsKilled", DbType="Int NOT NULL")]
		public int championsKilled
		{
			get
			{
				return this._championsKilled;
			}
			set
			{
				if ((this._championsKilled != value))
				{
					this.OnchampionsKilledChanging(value);
					this.SendPropertyChanging();
					this._championsKilled = value;
					this.SendPropertyChanged("championsKilled");
					this.OnchampionsKilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goldSpent", DbType="Int NOT NULL")]
		public int goldSpent
		{
			get
			{
				return this._goldSpent;
			}
			set
			{
				if ((this._goldSpent != value))
				{
					this.OngoldSpentChanging(value);
					this.SendPropertyChanging();
					this._goldSpent = value;
					this.SendPropertyChanged("goldSpent");
					this.OngoldSpentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalDamageDealt", DbType="Int NOT NULL")]
		public int totalDamageDealt
		{
			get
			{
				return this._totalDamageDealt;
			}
			set
			{
				if ((this._totalDamageDealt != value))
				{
					this.OntotalDamageDealtChanging(value);
					this.SendPropertyChanging();
					this._totalDamageDealt = value;
					this.SendPropertyChanged("totalDamageDealt");
					this.OntotalDamageDealtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalDamageTaken", DbType="Int NOT NULL")]
		public int totalDamageTaken
		{
			get
			{
				return this._totalDamageTaken;
			}
			set
			{
				if ((this._totalDamageTaken != value))
				{
					this.OntotalDamageTakenChanging(value);
					this.SendPropertyChanging();
					this._totalDamageTaken = value;
					this.SendPropertyChanged("totalDamageTaken");
					this.OntotalDamageTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team", DbType="Int NOT NULL")]
		public int team
		{
			get
			{
				return this._team;
			}
			set
			{
				if ((this._team != value))
				{
					this.OnteamChanging(value);
					this.SendPropertyChanging();
					this._team = value;
					this.SendPropertyChanged("team");
					this.OnteamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_win", DbType="Bit NOT NULL")]
		public bool win
		{
			get
			{
				return this._win;
			}
			set
			{
				if ((this._win != value))
				{
					this.OnwinChanging(value);
					this.SendPropertyChanging();
					this._win = value;
					this.SendPropertyChanged("win");
					this.OnwinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_neturalMinionsKilled", DbType="Int NOT NULL")]
		public int neturalMinionsKilled
		{
			get
			{
				return this._neturalMinionsKilled;
			}
			set
			{
				if ((this._neturalMinionsKilled != value))
				{
					this.OnneturalMinionsKilledChanging(value);
					this.SendPropertyChanging();
					this._neturalMinionsKilled = value;
					this.SendPropertyChanged("neturalMinionsKilled");
					this.OnneturalMinionsKilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_largestMultiKill", DbType="Int NOT NULL")]
		public int largestMultiKill
		{
			get
			{
				return this._largestMultiKill;
			}
			set
			{
				if ((this._largestMultiKill != value))
				{
					this.OnlargestMultiKillChanging(value);
					this.SendPropertyChanging();
					this._largestMultiKill = value;
					this.SendPropertyChanged("largestMultiKill");
					this.OnlargestMultiKillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_physicalDamageDealtPlayer", DbType="Int NOT NULL")]
		public int physicalDamageDealtPlayer
		{
			get
			{
				return this._physicalDamageDealtPlayer;
			}
			set
			{
				if ((this._physicalDamageDealtPlayer != value))
				{
					this.OnphysicalDamageDealtPlayerChanging(value);
					this.SendPropertyChanging();
					this._physicalDamageDealtPlayer = value;
					this.SendPropertyChanged("physicalDamageDealtPlayer");
					this.OnphysicalDamageDealtPlayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_physicalDamageTaken", DbType="Int NOT NULL")]
		public int physicalDamageTaken
		{
			get
			{
				return this._physicalDamageTaken;
			}
			set
			{
				if ((this._physicalDamageTaken != value))
				{
					this.OnphysicalDamageTakenChanging(value);
					this.SendPropertyChanging();
					this._physicalDamageTaken = value;
					this.SendPropertyChanged("physicalDamageTaken");
					this.OnphysicalDamageTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_magicDamageTaken", DbType="Int NOT NULL")]
		public int magicDamageTaken
		{
			get
			{
				return this._magicDamageTaken;
			}
			set
			{
				if ((this._magicDamageTaken != value))
				{
					this.OnmagicDamageTakenChanging(value);
					this.SendPropertyChanging();
					this._magicDamageTaken = value;
					this.SendPropertyChanged("magicDamageTaken");
					this.OnmagicDamageTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_largestCriticalStrike", DbType="Int NOT NULL")]
		public int largestCriticalStrike
		{
			get
			{
				return this._largestCriticalStrike;
			}
			set
			{
				if ((this._largestCriticalStrike != value))
				{
					this.OnlargestCriticalStrikeChanging(value);
					this.SendPropertyChanging();
					this._largestCriticalStrike = value;
					this.SendPropertyChanged("largestCriticalStrike");
					this.OnlargestCriticalStrikeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timePlayed", DbType="Int NOT NULL")]
		public int timePlayed
		{
			get
			{
				return this._timePlayed;
			}
			set
			{
				if ((this._timePlayed != value))
				{
					this.OntimePlayedChanging(value);
					this.SendPropertyChanging();
					this._timePlayed = value;
					this.SendPropertyChanged("timePlayed");
					this.OntimePlayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalHeal", DbType="Int NOT NULL")]
		public int totalHeal
		{
			get
			{
				return this._totalHeal;
			}
			set
			{
				if ((this._totalHeal != value))
				{
					this.OntotalHealChanging(value);
					this.SendPropertyChanging();
					this._totalHeal = value;
					this.SendPropertyChanged("totalHeal");
					this.OntotalHealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalUnitsHealed", DbType="Int NOT NULL")]
		public int totalUnitsHealed
		{
			get
			{
				return this._totalUnitsHealed;
			}
			set
			{
				if ((this._totalUnitsHealed != value))
				{
					this.OntotalUnitsHealedChanging(value);
					this.SendPropertyChanging();
					this._totalUnitsHealed = value;
					this.SendPropertyChanged("totalUnitsHealed");
					this.OntotalUnitsHealedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assists", DbType="Int NOT NULL")]
		public int assists
		{
			get
			{
				return this._assists;
			}
			set
			{
				if ((this._assists != value))
				{
					this.OnassistsChanging(value);
					this.SendPropertyChanging();
					this._assists = value;
					this.SendPropertyChanged("assists");
					this.OnassistsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item0", DbType="Int NOT NULL")]
		public int item0
		{
			get
			{
				return this._item0;
			}
			set
			{
				if ((this._item0 != value))
				{
					this.Onitem0Changing(value);
					this.SendPropertyChanging();
					this._item0 = value;
					this.SendPropertyChanged("item0");
					this.Onitem0Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item1", DbType="Int NOT NULL")]
		public int item1
		{
			get
			{
				return this._item1;
			}
			set
			{
				if ((this._item1 != value))
				{
					this.Onitem1Changing(value);
					this.SendPropertyChanging();
					this._item1 = value;
					this.SendPropertyChanged("item1");
					this.Onitem1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item2", DbType="Int NOT NULL")]
		public int item2
		{
			get
			{
				return this._item2;
			}
			set
			{
				if ((this._item2 != value))
				{
					this.Onitem2Changing(value);
					this.SendPropertyChanging();
					this._item2 = value;
					this.SendPropertyChanged("item2");
					this.Onitem2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item3", DbType="Int NOT NULL")]
		public int item3
		{
			get
			{
				return this._item3;
			}
			set
			{
				if ((this._item3 != value))
				{
					this.Onitem3Changing(value);
					this.SendPropertyChanging();
					this._item3 = value;
					this.SendPropertyChanged("item3");
					this.Onitem3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item4", DbType="Int NOT NULL")]
		public int item4
		{
			get
			{
				return this._item4;
			}
			set
			{
				if ((this._item4 != value))
				{
					this.Onitem4Changing(value);
					this.SendPropertyChanging();
					this._item4 = value;
					this.SendPropertyChanged("item4");
					this.Onitem4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item5", DbType="Int NOT NULL")]
		public int item5
		{
			get
			{
				return this._item5;
			}
			set
			{
				if ((this._item5 != value))
				{
					this.Onitem5Changing(value);
					this.SendPropertyChanging();
					this._item5 = value;
					this.SendPropertyChanged("item5");
					this.Onitem5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item6", DbType="Int NOT NULL")]
		public int item6
		{
			get
			{
				return this._item6;
			}
			set
			{
				if ((this._item6 != value))
				{
					this.Onitem6Changing(value);
					this.SendPropertyChanging();
					this._item6 = value;
					this.SendPropertyChanged("item6");
					this.Onitem6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_physicalDamageDealtToChampions", DbType="Int NOT NULL")]
		public int physicalDamageDealtToChampions
		{
			get
			{
				return this._physicalDamageDealtToChampions;
			}
			set
			{
				if ((this._physicalDamageDealtToChampions != value))
				{
					this.OnphysicalDamageDealtToChampionsChanging(value);
					this.SendPropertyChanging();
					this._physicalDamageDealtToChampions = value;
					this.SendPropertyChanged("physicalDamageDealtToChampions");
					this.OnphysicalDamageDealtToChampionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalDamageDealtToChampions", DbType="Int NOT NULL")]
		public int totalDamageDealtToChampions
		{
			get
			{
				return this._totalDamageDealtToChampions;
			}
			set
			{
				if ((this._totalDamageDealtToChampions != value))
				{
					this.OntotalDamageDealtToChampionsChanging(value);
					this.SendPropertyChanging();
					this._totalDamageDealtToChampions = value;
					this.SendPropertyChanged("totalDamageDealtToChampions");
					this.OntotalDamageDealtToChampionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trueDamageTaken", DbType="Int NOT NULL")]
		public int trueDamageTaken
		{
			get
			{
				return this._trueDamageTaken;
			}
			set
			{
				if ((this._trueDamageTaken != value))
				{
					this.OntrueDamageTakenChanging(value);
					this.SendPropertyChanging();
					this._trueDamageTaken = value;
					this.SendPropertyChanged("trueDamageTaken");
					this.OntrueDamageTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wardKilled", DbType="Int NOT NULL")]
		public int wardKilled
		{
			get
			{
				return this._wardKilled;
			}
			set
			{
				if ((this._wardKilled != value))
				{
					this.OnwardKilledChanging(value);
					this.SendPropertyChanging();
					this._wardKilled = value;
					this.SendPropertyChanged("wardKilled");
					this.OnwardKilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wardPlaced", DbType="Int NOT NULL")]
		public int wardPlaced
		{
			get
			{
				return this._wardPlaced;
			}
			set
			{
				if ((this._wardPlaced != value))
				{
					this.OnwardPlacedChanging(value);
					this.SendPropertyChanging();
					this._wardPlaced = value;
					this.SendPropertyChanged("wardPlaced");
					this.OnwardPlacedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_neutralMinionsKilledYourJungle", DbType="Int NOT NULL")]
		public int neutralMinionsKilledYourJungle
		{
			get
			{
				return this._neutralMinionsKilledYourJungle;
			}
			set
			{
				if ((this._neutralMinionsKilledYourJungle != value))
				{
					this.OnneutralMinionsKilledYourJungleChanging(value);
					this.SendPropertyChanging();
					this._neutralMinionsKilledYourJungle = value;
					this.SendPropertyChanged("neutralMinionsKilledYourJungle");
					this.OnneutralMinionsKilledYourJungleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalTimeCrowdControlDealt", DbType="Int NOT NULL")]
		public int totalTimeCrowdControlDealt
		{
			get
			{
				return this._totalTimeCrowdControlDealt;
			}
			set
			{
				if ((this._totalTimeCrowdControlDealt != value))
				{
					this.OntotalTimeCrowdControlDealtChanging(value);
					this.SendPropertyChanging();
					this._totalTimeCrowdControlDealt = value;
					this.SendPropertyChanged("totalTimeCrowdControlDealt");
					this.OntotalTimeCrowdControlDealtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_playerRole", DbType="Int NOT NULL")]
		public int playerRole
		{
			get
			{
				return this._playerRole;
			}
			set
			{
				if ((this._playerRole != value))
				{
					this.OnplayerRoleChanging(value);
					this.SendPropertyChanging();
					this._playerRole = value;
					this.SendPropertyChanged("playerRole");
					this.OnplayerRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_playerPosition", DbType="Int NOT NULL")]
		public int playerPosition
		{
			get
			{
				return this._playerPosition;
			}
			set
			{
				if ((this._playerPosition != value))
				{
					this.OnplayerPositionChanging(value);
					this.SendPropertyChanging();
					this._playerPosition = value;
					this.SendPropertyChanged("playerPosition");
					this.OnplayerPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GryStatystyki_GryOgolnie", Storage="_GryOgolnies", ThisKey="gameId", OtherKey="gameId")]
		public EntitySet<GryOgolnie> GryOgolnies
		{
			get
			{
				return this._GryOgolnies;
			}
			set
			{
				this._GryOgolnies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GryOgolnies(GryOgolnie entity)
		{
			this.SendPropertyChanging();
			entity.GryStatystyki = this;
		}
		
		private void detach_GryOgolnies(GryOgolnie entity)
		{
			this.SendPropertyChanging();
			entity.GryStatystyki = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GryOgolnie")]
	public partial class GryOgolnie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _gameId;
		
		private long _summonerId;
		
		private bool _invalid;
		
		private string _gameMode;
		
		private string _gameType;
		
		private string _subType;
		
		private int _mapId;
		
		private int _teamId;
		
		private int _championId;
		
		private int _spell1;
		
		private int _spell2;
		
		private int _level;
		
		private int _ipEarned;
		
		private System.DateTime _createDate;
		
		private EntityRef<Gracze> _Gracze;
		
		private EntityRef<GryStatystyki> _GryStatystyki;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OngameIdChanging(long value);
    partial void OngameIdChanged();
    partial void OnsummonerIdChanging(long value);
    partial void OnsummonerIdChanged();
    partial void OninvalidChanging(bool value);
    partial void OninvalidChanged();
    partial void OngameModeChanging(string value);
    partial void OngameModeChanged();
    partial void OngameTypeChanging(string value);
    partial void OngameTypeChanged();
    partial void OnsubTypeChanging(string value);
    partial void OnsubTypeChanged();
    partial void OnmapIdChanging(int value);
    partial void OnmapIdChanged();
    partial void OnteamIdChanging(int value);
    partial void OnteamIdChanged();
    partial void OnchampionIdChanging(int value);
    partial void OnchampionIdChanged();
    partial void Onspell1Changing(int value);
    partial void Onspell1Changed();
    partial void Onspell2Changing(int value);
    partial void Onspell2Changed();
    partial void OnlevelChanging(int value);
    partial void OnlevelChanged();
    partial void OnipEarnedChanging(int value);
    partial void OnipEarnedChanged();
    partial void OncreateDateChanging(System.DateTime value);
    partial void OncreateDateChanged();
    #endregion
		
		public GryOgolnie()
		{
			this._Gracze = default(EntityRef<Gracze>);
			this._GryStatystyki = default(EntityRef<GryStatystyki>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gameId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long gameId
		{
			get
			{
				return this._gameId;
			}
			set
			{
				if ((this._gameId != value))
				{
					if (this._GryStatystyki.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngameIdChanging(value);
					this.SendPropertyChanging();
					this._gameId = value;
					this.SendPropertyChanged("gameId");
					this.OngameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_summonerId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long summonerId
		{
			get
			{
				return this._summonerId;
			}
			set
			{
				if ((this._summonerId != value))
				{
					if (this._Gracze.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsummonerIdChanging(value);
					this.SendPropertyChanging();
					this._summonerId = value;
					this.SendPropertyChanged("summonerId");
					this.OnsummonerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invalid", DbType="Bit NOT NULL")]
		public bool invalid
		{
			get
			{
				return this._invalid;
			}
			set
			{
				if ((this._invalid != value))
				{
					this.OninvalidChanging(value);
					this.SendPropertyChanging();
					this._invalid = value;
					this.SendPropertyChanged("invalid");
					this.OninvalidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gameMode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string gameMode
		{
			get
			{
				return this._gameMode;
			}
			set
			{
				if ((this._gameMode != value))
				{
					this.OngameModeChanging(value);
					this.SendPropertyChanging();
					this._gameMode = value;
					this.SendPropertyChanged("gameMode");
					this.OngameModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gameType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string gameType
		{
			get
			{
				return this._gameType;
			}
			set
			{
				if ((this._gameType != value))
				{
					this.OngameTypeChanging(value);
					this.SendPropertyChanging();
					this._gameType = value;
					this.SendPropertyChanged("gameType");
					this.OngameTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string subType
		{
			get
			{
				return this._subType;
			}
			set
			{
				if ((this._subType != value))
				{
					this.OnsubTypeChanging(value);
					this.SendPropertyChanging();
					this._subType = value;
					this.SendPropertyChanged("subType");
					this.OnsubTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mapId", DbType="Int NOT NULL")]
		public int mapId
		{
			get
			{
				return this._mapId;
			}
			set
			{
				if ((this._mapId != value))
				{
					this.OnmapIdChanging(value);
					this.SendPropertyChanging();
					this._mapId = value;
					this.SendPropertyChanged("mapId");
					this.OnmapIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teamId", DbType="Int NOT NULL")]
		public int teamId
		{
			get
			{
				return this._teamId;
			}
			set
			{
				if ((this._teamId != value))
				{
					this.OnteamIdChanging(value);
					this.SendPropertyChanging();
					this._teamId = value;
					this.SendPropertyChanged("teamId");
					this.OnteamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_championId", DbType="Int NOT NULL")]
		public int championId
		{
			get
			{
				return this._championId;
			}
			set
			{
				if ((this._championId != value))
				{
					this.OnchampionIdChanging(value);
					this.SendPropertyChanging();
					this._championId = value;
					this.SendPropertyChanged("championId");
					this.OnchampionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spell1", DbType="Int NOT NULL")]
		public int spell1
		{
			get
			{
				return this._spell1;
			}
			set
			{
				if ((this._spell1 != value))
				{
					this.Onspell1Changing(value);
					this.SendPropertyChanging();
					this._spell1 = value;
					this.SendPropertyChanged("spell1");
					this.Onspell1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spell2", DbType="Int NOT NULL")]
		public int spell2
		{
			get
			{
				return this._spell2;
			}
			set
			{
				if ((this._spell2 != value))
				{
					this.Onspell2Changing(value);
					this.SendPropertyChanging();
					this._spell2 = value;
					this.SendPropertyChanged("spell2");
					this.Onspell2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[level]", Storage="_level", DbType="Int NOT NULL")]
		public int level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this.OnlevelChanging(value);
					this.SendPropertyChanging();
					this._level = value;
					this.SendPropertyChanged("level");
					this.OnlevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipEarned", DbType="Int NOT NULL")]
		public int ipEarned
		{
			get
			{
				return this._ipEarned;
			}
			set
			{
				if ((this._ipEarned != value))
				{
					this.OnipEarnedChanging(value);
					this.SendPropertyChanging();
					this._ipEarned = value;
					this.SendPropertyChanged("ipEarned");
					this.OnipEarnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="Date NOT NULL")]
		public System.DateTime createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this.OncreateDateChanging(value);
					this.SendPropertyChanging();
					this._createDate = value;
					this.SendPropertyChanged("createDate");
					this.OncreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gracze_GryOgolnie", Storage="_Gracze", ThisKey="summonerId", OtherKey="id", IsForeignKey=true)]
		public Gracze Gracze
		{
			get
			{
				return this._Gracze.Entity;
			}
			set
			{
				Gracze previousValue = this._Gracze.Entity;
				if (((previousValue != value) 
							|| (this._Gracze.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gracze.Entity = null;
						previousValue.GryOgolnies.Remove(this);
					}
					this._Gracze.Entity = value;
					if ((value != null))
					{
						value.GryOgolnies.Add(this);
						this._summonerId = value.id;
					}
					else
					{
						this._summonerId = default(long);
					}
					this.SendPropertyChanged("Gracze");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GryStatystyki_GryOgolnie", Storage="_GryStatystyki", ThisKey="gameId", OtherKey="gameId", IsForeignKey=true)]
		public GryStatystyki GryStatystyki
		{
			get
			{
				return this._GryStatystyki.Entity;
			}
			set
			{
				GryStatystyki previousValue = this._GryStatystyki.Entity;
				if (((previousValue != value) 
							|| (this._GryStatystyki.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GryStatystyki.Entity = null;
						previousValue.GryOgolnies.Remove(this);
					}
					this._GryStatystyki.Entity = value;
					if ((value != null))
					{
						value.GryOgolnies.Add(this);
						this._gameId = value.gameId;
					}
					else
					{
						this._gameId = default(long);
					}
					this.SendPropertyChanged("GryStatystyki");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
